{namespace Templates.ApiBuilder}

/**
 * This renders the main element.
 * @param? elementClasses
 * @param id
 */
{template .content}
	<div id="{$id}" class="builder component{$elementClasses ? ' ' + $elementClasses : ''}">
		{call .title data="all" /}
		{call .description data="all" /}
		{call .methods data="all" /}
		{call .path data="all" /}
		{call .params data="all" /}
		{call .handler data="all" /}
	</div>
{/template}

/**
 * @param data
 * @param id
 * @param title
 */
{template .title}
	<div id="{$id}-title" class="builder-title">
		<input
			type="text"
			class="form-control-borderless"
			name="title"
			placeholder="add a title..."
			value="{$title}"
			data-oninput="handleInputTitle_"
		/>
		<div class="builder-data">
			<span class="builder-data-label">Data</span>
			<div class="builder-data-switcher">
				{call Templates.Switcher.content}
					{param checked: $data /}
					{param events: ['checkedChanged': $id + ':handleDataSwitcherCheckedChanged_'] /}
					{param id: $id + '-dataSwitcher' /}
				{/call}
			</div>
		</div>
	</div>
{/template}

/**
 * @param id
 * @param description
 */
{template .description}
	<div id="{$id}-description" class="builder-description">
		<textarea
			class="form-control-borderless"
			name="description"
			placeholder="add a description..."
			data-oninput="handleInputDescription_">
			{$description}
		</textarea>
	</div>
{/template}

/**
 * @param id
 * @param method
 */
{template .methods}
	<div id="{$id}-methods" class="api-builder-methods">
		<p class="api-section-title">Method</p>
		{call Templates.ButtonGroup.content}
			{param buttons: [
				['label': 'get', 'cssClass': 'btn btn-default btn-get-bg'],
				['label': 'head', 'cssClass': 'btn btn-default btn-head-bg'],
				['label': 'post', 'cssClass': 'btn btn-default btn-post-bg'],
				['label': 'put', 'cssClass': 'btn btn-default btn-put-bg'],
				['label': 'patch', 'cssClass': 'btn btn-default btn-patch-bg'],
				['label': 'delete', 'cssClass': 'btn btn-default btn-delete-bg']
			] /}
			{param events: ['selectedChanged': $id + ':handleMethodsSelectedChanged_'] /}
			{param id: $id + '-methodButtonGroup' /}
			{param minSelected: 1 /}
			{param selected: $method /}
		{/call}
	</div>
{/template}

/**
 * @param host
 * @param id
 * @param path
 */
{template .path}
	<div id="{$id}-path">
		<p class="api-section-title">Endpoint</p>
		<div class="form-group">
			<div class="input-group">
				<div class="input-group-addon">{$host}</div>
				<div class="input-inner-addon input-inner-addon-left">
					<span class="icon-16-info"></span>
					<input
						type="text"
						class="input-group-addon-input form-control"
						name="path"
						placeholder="/new-api"
						value="{$path}"
						data-oninput="handleInputPath_"
					/>
				</div>
			</div>
		</div>
	</div>
{/template}

/**
 * @param id
 * @param handler
 */
{template .handler}
	<div id="{$id}-handler" class="form-group">
		<p class="api-section-title">Handler</p>
		<div class="builder-section-handler">
			<textarea
				class="form-control handler"
				name="handler"
				placeholder="function(request, response) {lb}
	return 'Hello World';
{rb}"
				data-oninput="handleInputHandler_">
				{$handler}
			</textarea>
		</div>
	</div>
{/template}

/**
 * @param id
 * @param parameters
 */
{template .params}
	<div id="{$id}-params">
		<p class="api-section-title">Parameters</p>
		<div class="builder-section-params">
			{foreach $param in $parameters}
				{call .param}
					{param id: $id /}
					{param index: index($param) /}
					{param param: $param /}
				{/call}
			{/foreach}
			<div class="builder-param-more row">
				<div class="col-md-12">
					<button class="btn btn-default btn-sm" data-onclick="handleClickAddParam_">
						<span class="icon-16-plus"></span> Add Parameter
					</button>
				</div>
			</div>
		</div>
	</div>
{/template}

/**
 * @param id
 * @param index
 * @param param
 */
{template .param private="true"}
	<div
		class="builder-param-item"
		data-index="{$index}"
		data-oninput="handleInputParam_">
		<div class="row builder-param-item-row">
			<div class="col-md-4">
				<input type="text" class="form-control" placeholder="Parameter" value="{$param.name}" data-name="name" />
			</div>
			<div class="col-md-4">
				{let $typesMap: quoteKeysIfJs(['number': 0, 'string': 1, 'boolean': 2, 'array': 3, 'object': 4]) /}
				{call Templates.Select.content}
					{param buttonClass: 'btn btn-default form-control dropdown-select' /}
					{param events: ['selectedIndexChanged': $id + ':handleTypeSelectedIndexChanged_'] /}
					{param id: $id + '-typeSelect' + $index /}
					{param items: ['Number', 'String', 'Boolean', 'Array', 'Object'] /}
					{param label: 'Type' /}
					{param selectedIndex: $param.type ? $typesMap[$param.type] : -1 /}
				{/call}
			</div>
			<div class="col-md-3">
				<span class="builder-param-label">Required</span>
				{call Templates.Switcher.content}
					{param checked: $param.required ? $param.required : false /}
					{param events: ['checkedChanged': $id + ':handleRequiredCheckedChanged_'] /}
					{param elementClasses: 'builder-param-switcher' /}
					{param id: $id + '-requiredSwitcher' + $index /}
				{/call}
			</div>
			<div class="col-md-1 builder-param-actions">
				{call Templates.Dropdown.content}
					{param body kind="html"}
						<li data-onclick="{$id}:handleDuplicateParamClick_" data-index="{$index}"><a href="#">Duplicate</a></li>
						<li data-onclick="{$id}:handleRemoveParamClick_" data-index="{$index}"><a href="#">Remove</a></li>
					{/param}
					{param header kind="html"}
						<button class="btn-transparent" data-onclick="toggle">
							<span class="builder-param-ellipsis icon-16-ellipsis"></span>
						</button>
					{/param}
					{param id: $id + '-menu' + $index /}
				{/call}
			</div>
		</div>
		<div class="row builder-param-item-row">
			<div class="col-md-8">
				<input
					type="text"
					class="form-control"
					placeholder="Description"
					value="{$param.description ? $param.description : ''}"
					data-name="description"
				/>
			</div>
		</div>
		<div class="builder-param-item-advanced">
			<a href="#" class="api-section-title" data-onclick="handleAdvancedSetupClick_">
				Advanced Setup <span class="builder-param-item-advanced-arrow icon-12-arrow-down-short"></span>
			</a>
			<div class="row builder-param-item-row">
				<div class="col-md-4">
					<input
						type="text"
						class="form-control"
						placeholder="Value"
						value="{$param.value ? $param.value : ''}"
						data-name="value"
					/>
				</div>
				<div class="col-md-4">
					{let $typesMap: quoteKeysIfJs(['param': 0, 'path': 1]) /}
					{call Templates.Select.content}
						{param buttonClass: 'btn btn-default form-control dropdown-select' /}
						{param events: ['selectedIndexChanged': $id + ':handleInSelectedIndexChanged_'] /}
						{param id: $id + '-inSelect' + $index /}
						{param items: ['Param', 'Path'] /}
						{param selectedIndex: $param.in ? $typesMap[$param.in] : 0 /}
					{/call}
				</div>
				<div class="col-md-3">
					<span class="builder-param-label">Multiple</span>
					{call Templates.Switcher.content}
						{param checked: $param.multiple ? $param.multiple : false /}
						{param events: ['checkedChanged': $id + ':handleMultipleCheckedChanged_'] /}
						{param elementClasses: 'builder-param-switcher' /}
						{param id: $id + '-multipleSwitcher' + $index /}
					{/call}
				</div>
			</div>
			<div class="row builder-param-item-row">
				<div class="col-md-8">
					<input
						type="text"
						class="form-control"
						placeholder="Validator"
						value="{$param.validator ? $param.validator : ''}"
						data-name="validator"
					/>
				</div>
			</div>
		</div>
	</div>
{/template}
